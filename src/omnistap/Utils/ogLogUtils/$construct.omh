Calculate lcPathToOmnisCLI as con(loPath.$startup(),"omniscli.lbs")

If isclear($libs.$findname("omniscli"))&FileOps.$doesfileexist(lcPathToOmnisCLI)
	Do $libs.$add(lcPathToOmnisCLI,"omniscli")
	Do $libs.omniscli.$objects.oOmnisCLI.$new() Returns loCLI
	Calculate lcRed as loCLI.$kRed()
	Calculate lcYellow as loCLI.$kYellow()
	Calculate lcCyan as loCLI.$kCyan()
	Calculate lcLightBlue as loCLI.$kLightBlue()
End If

Do ilLog.$cols.$add("ID",kInteger,k32bitint)
Do ilLog.$cols.$add("TimeStamp",kDate,kDatetime)
Do ilLog.$cols.$add("Level",kCharacter,kSimplechar,10000000)
Do ilLog.$cols.$add("Method",kItemref)
Do ilLog.$cols.$add("MethodLine",kInteger,k32bitint)
Do ilLog.$cols.$add("Location",kCharacter,kSimplechar,10000000)
Do ilLog.$cols.$add("Message",kCharacter,kSimplechar,10000000)
Do ilLog.$cols.$add("Color",kInteger,k32bitint)
Do ilLog.$cols.$add("IconID",kInteger,k32bitint)
Do ilLog.$cols.$add("ShellColor",kCharacter,kSimplechar,100000000)

Do ilLevels.$cols.$add("Level",kCharacter,kSimplechar,10000000)
Do ilLevels.$cols.$add("IconID",kInteger,k32bitint)
Do ilLevels.$cols.$add("ShellColor",kCharacter,kSimplechar,100000000)
Do ilLevels.$add("Error",1681,lcRed)
Do ilLevels.$add("Warning",1682,lcYellow)
Do ilLevels.$add("Notice",1694,lcCyan)
Do ilLevels.$add("Debug",2024,lcLightBlue)

If tvDevVersion
	Do $cinst.$setVerbosity("Debug")
Else
	Do $cinst.$setVerbosity("Notice")
End If

Do ilDestinations.$cols.$add("Destination",kCharacter,kSimplechar,100000000)
Do ilDestinations.$cols.$add("Path",kCharacter,kSimplechar,100000000)
Do ilDestinations.$cols.$add("IsShell",kBoolean)
Do ilDestinations.$add("Log","",kFalse)
Do ilDestinations.$add("Stdout","",kTrue)
Do ilDestinations.$add("Stderr","",kTrue)
Calculate ilDestinations.$line as 1