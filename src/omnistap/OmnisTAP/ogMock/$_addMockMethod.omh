#Adds the overridden method to the mock object
If pos(".",ilMockMethods.MethodName)
	Calculate lcObject as mid(ilMockMethods.MethodName,1,rpos(".",ilMockMethods.MethodName)-1)
	Calculate lcMethod as mid(ilMockMethods.MethodName,rpos(".",ilMockMethods.MethodName)+1)
	
	Set reference lirObject to $cinst.$getMockInstance().[lcObject].$ref
Else
	Calculate lcMethod as ilMockMethods.MethodName
	Set reference lirObject to $cinst.$getMockInstance().$ref
End If

Do lirObject.$methods.$remove(lirObject.$methods.$findname(lcMethod))
Do lirObject.$methods.$add(lcMethod) Returns lirMethod

#Callcount
Do lirMethod.$methodlines.$add(con("Do _iorMock.$mockedMethodCalled(",ilMockMethods.$line,")"))

#Add calls to the mock to set expected values
For ilMockMethods.Parameters.$line from 1 to ilMockMethods.Parameters.$linecount step 1
	Do lirMethod.$lvardefs.$add(ilMockMethods.Parameters.Name,ilMockMethods.Parameters.ObjType,ilMockMethods.Parameters.ObjSubType,ilMockMethods.Parameters.ObjSubLen,kTrue)
	
	If ilMockMethods.Parameters.ObjType=kItemref
		Calculate lcHaveVariable as con(ilMockMethods.Parameters.Name,".$fullname.$ref")
	Else
		Calculate lcHaveVariable as con(ilMockMethods.Parameters.Name,".$ref")
	End If
	
	Calculate lcParameterMethodText as con("_iorMock.$mockedMethodParameterPassed(",ilMockMethods.$line,",",ilMockMethods.Parameters.$line,",",lcHaveVariable,")")
	
	If ilMockMethods.Parameters.ObjType=kFieldreference
		Do lirMethod.$methodlines.$add(con("Calculate ",ilMockMethods.Parameters.Name," as ",lcParameterMethodText))
	Else
		Do lirMethod.$methodlines.$add(con("Do ",lcParameterMethodText))
	End If
End For

#Return
Do lirMethod.$methodlines.$add(con("Quit method _iorMock.$mockedMethodReturn(",ilMockMethods.$line,")"))